/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedItemsImport } from './routes/_authenticated/items'
import { Route as AuthenticatedAdminImport } from './routes/_authenticated/admin'
import { Route as AuthenticatedPathsIndexImport } from './routes/_authenticated/paths/index'
import { Route as AuthenticatedLearnIndexImport } from './routes/_authenticated/learn/index'
import { Route as AuthenticatedPathsCreateImport } from './routes/_authenticated/paths/create'
import { Route as AuthenticatedPathsPathIdImport } from './routes/_authenticated/paths/$pathId'
import { Route as AuthenticatedLearnChatImport } from './routes/_authenticated/learn/chat'
import { Route as AuthenticatedLearnPathIdImport } from './routes/_authenticated/learn/$pathId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedItemsRoute = AuthenticatedItemsImport.update({
  path: '/items',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminRoute = AuthenticatedAdminImport.update({
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPathsIndexRoute = AuthenticatedPathsIndexImport.update({
  path: '/paths/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLearnIndexRoute = AuthenticatedLearnIndexImport.update({
  path: '/learn/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPathsCreateRoute = AuthenticatedPathsCreateImport.update({
  path: '/paths/create',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPathsPathIdRoute = AuthenticatedPathsPathIdImport.update({
  path: '/paths/$pathId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLearnChatRoute = AuthenticatedLearnChatImport.update({
  path: '/learn/chat',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLearnPathIdRoute = AuthenticatedLearnPathIdImport.update({
  path: '/learn/$pathId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      preLoaderRoute: typeof AuthenticatedAdminImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/items': {
      preLoaderRoute: typeof AuthenticatedItemsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/learn/$pathId': {
      preLoaderRoute: typeof AuthenticatedLearnPathIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/learn/chat': {
      preLoaderRoute: typeof AuthenticatedLearnChatImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/paths/$pathId': {
      preLoaderRoute: typeof AuthenticatedPathsPathIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/paths/create': {
      preLoaderRoute: typeof AuthenticatedPathsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/learn/': {
      preLoaderRoute: typeof AuthenticatedLearnIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/paths/': {
      preLoaderRoute: typeof AuthenticatedPathsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedAdminRoute,
    AuthenticatedItemsRoute,
    AuthenticatedSettingsRoute,
    AuthenticatedIndexRoute,
    AuthenticatedLearnPathIdRoute,
    AuthenticatedLearnChatRoute,
    AuthenticatedPathsPathIdRoute,
    AuthenticatedPathsCreateRoute,
    AuthenticatedLearnIndexRoute,
    AuthenticatedPathsIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
